name: Deploy Frontend

on:
  push:
    branches: ["main"]
    paths:
      - "react/**"
      - ".github/workflows/deploy-frontend.yml"
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Node setup
      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ secrets.NODE_VERSION || '20' }}

      # 3) Write production env for CRA
      - name: Create .env.production
        working-directory: react
        run: |
          printf "%s\n" "${{ secrets.FRONTEND_ENV }}" > .env.production

      # 4) Build (donâ€™t fail on warnings)
      - name: Install & Build
        working-directory: react
        env:
          CI: "false"
        run: |
          npm ci
          npm run build

      # 5) Make sure remote release dir exists (via SSH password)
      - name: Ensure release dir on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          password: ${{ secrets.VPS_PASS }}
          script: |
            set -euxo pipefail
            mkdir -p /srv/hrms/frontend/releases/${{ github.sha }}/build

      # 6) Upload build/ using rsync + password
      - name: Rsync build to server with password
        run: |
          set -euxo pipefail
          sudo apt-get update && sudo apt-get install -y sshpass
          sshpass -p "${{ secrets.VPS_PASS }}" \
            rsync -avz \
            -e "ssh -p ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no" \
            ./react/build/ \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/srv/hrms/frontend/releases/${{ github.sha }}/build/

      # 7) Switch symlink and reload nginx (via SSH password)
      - name: Switch symlink & reload nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          password: ${{ secrets.VPS_PASS }}
          script: |
            set -euxo pipefail
            rel="/srv/hrms/frontend/releases/${{ github.sha }}"
            test -d "$rel/build" || (echo "build dir missing in $rel" && exit 1)
            ln -sfn "$rel/build" /srv/hrms/frontend/current
            cd /srv/hrms/frontend/releases
            ls -1t | tail -n +6 | xargs -r rm -rf
            sudo nginx -t && sudo systemctl reload nginx || true
